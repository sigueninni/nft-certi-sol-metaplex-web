'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var umi = require('@metaplex-foundation/umi');
var errors = require('./errors.cjs');

const DEFAULT_BASE_URL = 'https://mockstorage.example.com/';
function createMockStorage(options) {
  const cache = {};
  const baseUrl = options?.baseUrl ?? DEFAULT_BASE_URL;
  const uploadOne = async file => {
    const uri = `${baseUrl}${file.uniqueName}`;
    cache[uri] = file;
    return uri;
  };
  const upload = async files => Promise.all(files.map(file => uploadOne(file)));
  const uploadJson = async json => uploadOne(umi.createGenericFileFromJson(json));
  const getUploadPrice = async () => umi.sol(0);
  const downloadOne = async uri => {
    const file = cache[uri];
    if (!file) {
      throw new errors.AssetNotFoundError(uri);
    }
    return file;
  };
  const download = async uris => Promise.all(uris.map(uri => downloadOne(uri)));
  const downloadJson = async uri => umi.parseJsonFromGenericFile(await downloadOne(uri));
  return {
    upload,
    uploadJson,
    getUploadPrice,
    download,
    downloadJson
  };
}

exports.createMockStorage = createMockStorage;
//# sourceMappingURL=createMockStorage.cjs.map
