{"version":3,"file":"createMockStorage.mjs","sources":["../../src/createMockStorage.ts"],"sourcesContent":["import {\n  createGenericFileFromJson,\n  DownloaderInterface,\n  GenericFile,\n  parseJsonFromGenericFile,\n  sol,\n  SolAmount,\n  UploaderInterface,\n} from '@metaplex-foundation/umi';\nimport { AssetNotFoundError } from './errors';\n\nconst DEFAULT_BASE_URL = 'https://mockstorage.example.com/';\n\nexport type MockStorageOptions = {\n  baseUrl?: string;\n};\n\nexport function createMockStorage(\n  options?: MockStorageOptions\n): UploaderInterface & DownloaderInterface {\n  const cache: Record<string, GenericFile> = {};\n  const baseUrl = options?.baseUrl ?? DEFAULT_BASE_URL;\n\n  const uploadOne = async (file: GenericFile): Promise<string> => {\n    const uri = `${baseUrl}${file.uniqueName}`;\n    cache[uri] = file;\n\n    return uri;\n  };\n\n  const upload = async (files: GenericFile[]): Promise<string[]> =>\n    Promise.all(files.map((file) => uploadOne(file)));\n\n  const uploadJson = async <T>(json: T): Promise<string> =>\n    uploadOne(createGenericFileFromJson<T>(json));\n\n  const getUploadPrice = async (): Promise<SolAmount> => sol(0);\n\n  const downloadOne = async (uri: string): Promise<GenericFile> => {\n    const file = cache[uri];\n\n    if (!file) {\n      throw new AssetNotFoundError(uri);\n    }\n\n    return file;\n  };\n\n  const download = async (uris: string[]): Promise<GenericFile[]> =>\n    Promise.all(uris.map((uri) => downloadOne(uri)));\n\n  const downloadJson = async <T>(uri: string): Promise<T> =>\n    parseJsonFromGenericFile<T>(await downloadOne(uri));\n\n  return {\n    upload,\n    uploadJson,\n    getUploadPrice,\n    download,\n    downloadJson,\n  };\n}\n"],"names":["DEFAULT_BASE_URL","createMockStorage","options","cache","baseUrl","uploadOne","file","uri","uniqueName","upload","files","Promise","all","map","uploadJson","json","createGenericFileFromJson","getUploadPrice","sol","downloadOne","AssetNotFoundError","download","uris","downloadJson","parseJsonFromGenericFile"],"mappings":";;;AAWA,MAAMA,gBAAgB,GAAG,kCAAkC,CAAA;AAMpD,SAASC,iBAAiB,CAC/BC,OAA4B,EACa;EACzC,MAAMC,KAAkC,GAAG,EAAE,CAAA;AAC7C,EAAA,MAAMC,OAAO,GAAGF,OAAO,EAAEE,OAAO,IAAIJ,gBAAgB,CAAA;AAEpD,EAAA,MAAMK,SAAS,GAAG,MAAOC,IAAiB,IAAsB;IAC9D,MAAMC,GAAG,GAAI,CAAEH,EAAAA,OAAQ,GAAEE,IAAI,CAACE,UAAW,CAAC,CAAA,CAAA;AAC1CL,IAAAA,KAAK,CAACI,GAAG,CAAC,GAAGD,IAAI,CAAA;AAEjB,IAAA,OAAOC,GAAG,CAAA;GACX,CAAA;EAED,MAAME,MAAM,GAAG,MAAOC,KAAoB,IACxCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,GAAG,CAAEP,IAAI,IAAKD,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAAA;EAEnD,MAAMQ,UAAU,GAAG,MAAUC,IAAO,IAClCV,SAAS,CAACW,yBAAyB,CAAID,IAAI,CAAC,CAAC,CAAA;AAE/C,EAAA,MAAME,cAAc,GAAG,YAAgCC,GAAG,CAAC,CAAC,CAAC,CAAA;AAE7D,EAAA,MAAMC,WAAW,GAAG,MAAOZ,GAAW,IAA2B;AAC/D,IAAA,MAAMD,IAAI,GAAGH,KAAK,CAACI,GAAG,CAAC,CAAA;IAEvB,IAAI,CAACD,IAAI,EAAE;AACT,MAAA,MAAM,IAAIc,kBAAkB,CAACb,GAAG,CAAC,CAAA;AACnC,KAAA;AAEA,IAAA,OAAOD,IAAI,CAAA;GACZ,CAAA;EAED,MAAMe,QAAQ,GAAG,MAAOC,IAAc,IACpCX,OAAO,CAACC,GAAG,CAACU,IAAI,CAACT,GAAG,CAAEN,GAAG,IAAKY,WAAW,CAACZ,GAAG,CAAC,CAAC,CAAC,CAAA;AAElD,EAAA,MAAMgB,YAAY,GAAG,MAAUhB,GAAW,IACxCiB,wBAAwB,CAAI,MAAML,WAAW,CAACZ,GAAG,CAAC,CAAC,CAAA;EAErD,OAAO;IACLE,MAAM;IACNK,UAAU;IACVG,cAAc;IACdI,QAAQ;AACRE,IAAAA,YAAAA;GACD,CAAA;AACH;;;;"}