import { createGenericFileFromJson, sol, parseJsonFromGenericFile } from '@metaplex-foundation/umi';
import { AssetNotFoundError } from './errors.mjs';

const DEFAULT_BASE_URL = 'https://mockstorage.example.com/';
function createMockStorage(options) {
  const cache = {};
  const baseUrl = options?.baseUrl ?? DEFAULT_BASE_URL;
  const uploadOne = async file => {
    const uri = `${baseUrl}${file.uniqueName}`;
    cache[uri] = file;
    return uri;
  };
  const upload = async files => Promise.all(files.map(file => uploadOne(file)));
  const uploadJson = async json => uploadOne(createGenericFileFromJson(json));
  const getUploadPrice = async () => sol(0);
  const downloadOne = async uri => {
    const file = cache[uri];
    if (!file) {
      throw new AssetNotFoundError(uri);
    }
    return file;
  };
  const download = async uris => Promise.all(uris.map(uri => downloadOne(uri)));
  const downloadJson = async uri => parseJsonFromGenericFile(await downloadOne(uri));
  return {
    upload,
    uploadJson,
    getUploadPrice,
    download,
    downloadJson
  };
}

export { createMockStorage };
//# sourceMappingURL=createMockStorage.mjs.map
